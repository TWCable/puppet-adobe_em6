#!/usr/bin/env bash

REPOSITORY="<%= @dir_instance_crx_quickstart %>/repository/segmentstore"
AEM_USER="<%= scope['::adobe_em6::params::aem_user'] %>"

#Returns the total disk usage for the mount that contains the AEM repository. e.g "20" for 20% used
function repositoryDiskUsage() {
    df -h ${REPOSITORY} | grep -Po "([0-9]{1,3})%" | tr -d %
}

function aboveDiskUsageThreshold() {
    THRESHOLD="<%= @compact_disk_percent %>"
    if [ $(repositoryDiskUsage) -ge ${THRESHOLD} ]; then
        echo true
    else
        echo false
    fi
}

function runOfflineCompaction() {
    if [ $(whoami) != "root" ] && [ $(whoami) != ${AEM_USER} ]; then
        log "You must be root or ${AEM_USER}"
        exit 1
    fi
    if [ -f /var/lock/subsys/aem_<%= @title %> ]; then
        log "To run offline compaction, AEM must be shutdown."
        exit 1
    fi
    if [ -f "<%= @compact_jar %>" ]; then
        chkpoint_cmd="java -Dtar.memoryMapped=true -jar <%= @compact_jar %> checkpoints ${REPOSITORY} rm-unreferenced"
        compact_cmd="java -Dtar.memoryMapped=true -jar <%= @compact_jar %> compact ${REPOSITORY}"
        if [ $(whoami) == "root" ]; then
          chkpoint_cmd="sudo -u ${AEM_USER} ${chkpoint_cmd}"
          compact_cmd="sudo -u ${AEM_USER} ${compact_cmd}"
        fi
        log "Performing TAR compaction.."
        log "Deleting unreferenced checkpoints.."
        eval $chkpoint_cmd
        log "Compacting segment store.."
        eval $compact_cmd
    else
        log "Offline compaction not running, because compaction software is not provisioned"
    fi
}

function log() {
    echo $1
    logger $1
}

case $1 in
    repositoryDiskUsage) repositoryDiskUsage ;;
    aboveDiskUsageThreshold) aboveDiskUsageThreshold ;;
    runOfflineCompaction) runOfflineCompaction ;;
esac
